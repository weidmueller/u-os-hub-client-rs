name: "build"
on: # rebuild any PRs and main branch changes
  pull_request:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: self-hosted

    steps:
      #We need this to free up enough space for our cache. 
      #See: https://github.com/orgs/community/discussions/25678#discussioncomment-5242449
      - name: Delete huge unnecessary tools folder
        run: rm -rf /opt/hostedtoolcache

      # This is required to be able to pull protected repositories      
      - uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ vars.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}
          repositories: |
            u-os-hub-api
            u-os-hub-client-rs

      - name: Checkout (GitHub)
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
          submodules: recursive
          # Make sure the value of GITHUB_TOKEN will not be persisted in repo's config
          persist-credentials: false

      # Cache rust target folder for faster builds
      - name: Cache rust target folder
        id: cache-rust
        uses: actions/cache@v4
        env:
          cache-name: cache-rust-target-folder
        with:
          path: target
          # Note: we cannot use Cargo.lock because its a library crate, so we use the toml for best effort
          # We use a unique key here so that each build updates the cache, and then a restore key to restore the previous cache
          # See: https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/Cargo.toml') }}-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/Cargo.toml') }}-

      # This is required to cache the devcontainer image
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ vars.GH_USERNAME }}
          password: ${{ secrets.GH_ACCESS_TOKEN }}

      - name: Set up Node.js for NPM
        if: steps.check.outputs.changed == 'true'
        uses: actions/setup-node@v1.2.0
        with:
          registry-url: 'https://registry.npmjs.org'

      - name: Build and run dev container task
        uses: devcontainers/ci@v0.3
        with:
          imageName: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}/devcontainer
          push: always
          cacheFrom: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}/devcontainer
          runCmd: |
            set -eu

            # Check merge request for all architectures
            BUILD_ALL_ARCHS=1 ./tools/check-merge-request.sh

            # Print size of target folder
            du -sh target/
            du -sh target/*
